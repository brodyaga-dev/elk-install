input {
  beats {
    port => "5044"
#    congestion_threshold => 30
    tags => "beats"
    ssl => true
    ssl_certificate => /usr/share/logstash/beat-forwarder.crt
    ssl_key => /usr/share/logstash/beat-forwarder.key
    ssl_verify_mode => none
  }
}

output {
  if "beats" in [tags] {
    if [type] == "tracking_log" {
      elasticsearch {
        # UPDATE IT!
        hosts => ["localhost:9200"]
        manage_template => false
        index => "tracking-%{+YYYY.MM.dd}"
        document_type => "%{[@metadata][type]}"
      }
    } else {
      elasticsearch {
        # UPDATE IT!
        hosts => ["localhost:9200"]
        manage_template => false
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
        document_type => "%{[@metadata][type]}"
      }
    }
  }
}

filter {

  if [source] {
    grok {
      match => [ "source", "^.+servers/(?<node>[^/]+).+/(?<filename>.+)" ]
    }
    grok {
      match => [ "node", "^(?<landscape>.+)-(?<system>[a-zA-Z_]+)-?(?<branch_id>[0-9])?-?(?<node_id>[0-9])" ]
    }
  }

  mutate { remove_field => ["beat"] }

  if [type] == "log" {
    grok {
      match => [
        "message", "^(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?,(?:\d+)) (?<level_severity>[A-Z]+)\s+\[(?<category>.+)\] \((?<thread>[^)]+|[-.a-zA-Z0-9]+ \([^\)]+\))\) %{GREEDYDATA:full_message}"
      ]
      remove_field => [ "message" ]
    }
    date {
      match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS"]
      target => "@timestamp"
      remove_field => "timestamp"
    }

    # happens if grok filter failed
    if [message] {
      mutate { rename => {"message" => "full_message"} }
    }
  }

  if [type] == "access_log" {
    grok {
      match => [
        "message", "^\[(?<timestamp>%{MONTHDAY}/%{MONTH}/%{YEAR}:%{TIME} %{ISO8601_TIMEZONE})] - (?<ip>%{IP}) - ?\[Thread:(?<thread>.+) SessionId:(?<session_id>[^\]]+)\]: (?<method>[A-Z]+) (?<local_port>[0-9]+) (?<url>[^ ]+) (?<protocol>[^ ]+) (?<response_code>[0-9]{3}) (?<bytes_sent>[\-0-9]+) (?<process_time>[0-9]+)ms \[set-cookie:(?<set_cookie>.*)\]"
      ]
      remove_field => [ "message" ]
    }
    date {
      match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
      target => "@timestamp"
      remove_field => "timestamp"
    }
  }

  if [type] == "tracking_log" {
    grok {
      match => [
        "message", "^(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?,(?:\d+)) \((?<thread>[^)]+)\) %{GREEDYDATA:full_message}"
      ]
      remove_field => [ "message" ]
    }
    date {
      match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS"]
      target => "@timestamp"
      remove_field => "timestamp"
    }
  }
  if [@metadata][beat] == "metricbeat" {
        grok {
            match => { "[system][process][cmdline]" => "[(?<projectdate>java -jar\s)(?<projectenv>([-]?Denv[=]?[prdeval]+[23]?\s))(?<projecttype>([-]?Dtype[=]?[a-zA-Z0-9-]+\s))(?<projectapp>([-]?Dapp[=]?[project23]+\s))(?<prof>([a-zA-Z0-9=-]+\s))(?<springprofile>([.a-zA-Z0-9=-]+\s))(?<servicename>([a-zA-Z0-9=-]+\s))(?<appserver>([.a-zA-Z0-9=-]+\s))(%{GREEDYDATA:rest})]" }
        add_field => { "service_status" => "running" }
        }
  }

} 